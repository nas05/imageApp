{"ast":null,"code":"var _jsxFileName = \"/Users/nas/Desktop/image-app-master/frontend/src/components/Home/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { gql, useQuery } from \"@apollo/client\";\nimport Post from './post.js';\nimport Header from '../Navbar';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FETCH_IMAGES = gql`\nquery ImagesQuery{\n  Images{\n    id,\n    user_id,\n    image_link\n  }\n}\n`;\nconst Home = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_IMAGES, {\n    onCompleted: data => {\n      if (data) {\n        console.log(data);\n      } else {\n        alert(\"Failed to fetch Images\");\n      }\n    }\n  });\n  const navigate = useNavigate();\n  const isLoggedIn = () => {\n    const id = localStorage.getItem('userId');\n    if (!id) {\n      navigate(\"/auth\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoggedIn(), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-md-3 g-4 mt-5\",\n        children: data && data.Images.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: index,\n            children: /*#__PURE__*/_jsxDEV(Post, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"whjd/VjXePiAoln+Rh74bIkrpEU=\", false, function () {\n  return [useQuery, useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","gql","useQuery","Post","Header","useNavigate","FETCH_IMAGES","Home","loading","error","data","onCompleted","console","log","alert","navigate","isLoggedIn","id","localStorage","getItem","Images","map","index"],"sources":["/Users/nas/Desktop/image-app-master/frontend/src/components/Home/index.js"],"sourcesContent":["import React from 'react'\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport Post from './post.js'\nimport Header from '../Navbar'\nimport { useNavigate } from \"react-router-dom\";\n\nconst FETCH_IMAGES = gql`\nquery ImagesQuery{\n  Images{\n    id,\n    user_id,\n    image_link\n  }\n}\n`;\n\nconst Home = () => {\n    const { loading, error, data } = useQuery(FETCH_IMAGES,{\n        onCompleted: (data) => {\n            if(data)\n            {\n                console.log(data)\n            }\n            else{\n                alert(\"Failed to fetch Images\");\n            }\n           }\n    });\n    const navigate = useNavigate();\n    const isLoggedIn = ()=>{\n        const id = localStorage.getItem('userId');\n        if (!id){\n            navigate(\"/auth\");\n        }\n    }\n    return (\n        <>\n        {isLoggedIn()}\n            <Header />\n            <div className='container'>\n\n                <div className='row row-cols-md-3 g-4 mt-5'>\n                    {data && data.Images.map((data, index) => {\n                        return <div id={index}><Post data={data} /></div>\n                    })}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAE9C,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAAA;AAE/C,MAAMC,YAAY,GAAGL,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMM,IAAI,GAAG,MAAM;EAAA;EACf,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAACI,YAAY,EAAC;IACnDK,WAAW,EAAGD,IAAI,IAAK;MACnB,IAAGA,IAAI,EACP;QACIE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACrB,CAAC,MACG;QACAI,KAAK,CAAC,wBAAwB,CAAC;MACnC;IACD;EACP,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,UAAU,GAAG,MAAI;IACnB,MAAMC,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACzC,IAAI,CAACF,EAAE,EAAC;MACJF,QAAQ,CAAC,OAAO,CAAC;IACrB;EACJ,CAAC;EACD,oBACI;IAAA,WACCC,UAAU,EAAE,eACT,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,WAAW;MAAA,uBAEtB;QAAK,SAAS,EAAC,4BAA4B;QAAA,UACtCN,IAAI,IAAIA,IAAI,CAACU,MAAM,CAACC,GAAG,CAAC,CAACX,IAAI,EAAEY,KAAK,KAAK;UACtC,oBAAO;YAAK,EAAE,EAAEA,KAAM;YAAA,uBAAC,QAAC,IAAI;cAAC,IAAI,EAAEZ;YAAK;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAAM;QACrD,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA,gBACP;AAEX,CAAC;AAAA,GAjCKH,IAAI;EAAA,QAC2BL,QAAQ,EAWxBG,WAAW;AAAA;AAAA,KAZ1BE,IAAI;AAmCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}