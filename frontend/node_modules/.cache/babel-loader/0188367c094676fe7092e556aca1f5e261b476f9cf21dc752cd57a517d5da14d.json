{"ast":null,"code":"var _jsxFileName = \"/Users/nas/Desktop/image-app/frontend/src/components/Home/post.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIKE_MUTATION = gql`\nmutation ImageLike(\n    $image_id: Int!\n    $user_id: Int!\n  ) {\n    createImageLike(user_id:$user_id, image_id:$image_id){\n        id,\n        user_id,\n        image_id\n    }\n  }\n`;\nconst GET_IMAGE_LIKES = gql`\nquery GetImageLikes(\n    $image_id: ID!\n){\n\tImageLikes(image_id:$image_id){\n        likes\n  }\n}\n`;\nconst Post = props => {\n  _s();\n  const [likePic, {\n    loading,\n    error\n  }] = useMutation(LIKE_MUTATION, {\n    onCompleted: data => {\n      alert(\"Image Liked\");\n      window.location.reload();\n    }\n  });\n  const likeImage = imageId => {\n    const userId = parseInt(localStorage.getItem(\"userId\"));\n    likePic({\n      variables: {\n        image_id: parseInt(imageId),\n        user_id: userId\n      }\n    });\n    if (error) {\n      console.log(error);\n    }\n  };\n  const {\n    likesLoading,\n    likesError,\n    data\n  } = useQuery(GET_IMAGE_LIKES, {\n    variables: {\n      image_id: parseInt(props.data.id)\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col\",\n    id: props.data.id,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card border-secondary bg-light mb-3\",\n      style: {\n        width: \"20rem\",\n        height: \"30rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: props.data.image_link,\n        alt: \"Card image cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          id: props.data.id,\n          onClick: () => likeImage(props.data.id),\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: [\"Likes: \", data ? data.ImageLikes.likes : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"n3ClhKAUsvPLfkkNkSL14dYFWDY=\", false, function () {\n  return [useMutation, useQuery];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","gql","useMutation","useQuery","LIKE_MUTATION","GET_IMAGE_LIKES","Post","props","likePic","loading","error","onCompleted","data","alert","window","location","reload","likeImage","imageId","userId","parseInt","localStorage","getItem","variables","image_id","user_id","console","log","likesLoading","likesError","id","width","height","image_link","ImageLikes","likes"],"sources":["/Users/nas/Desktop/image-app/frontend/src/components/Home/post.js"],"sourcesContent":["import React from 'react'\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\n\nconst LIKE_MUTATION = gql`\nmutation ImageLike(\n    $image_id: Int!\n    $user_id: Int!\n  ) {\n    createImageLike(user_id:$user_id, image_id:$image_id){\n        id,\n        user_id,\n        image_id\n    }\n  }\n`;\n\nconst GET_IMAGE_LIKES = gql`\nquery GetImageLikes(\n    $image_id: ID!\n){\n\tImageLikes(image_id:$image_id){\n        likes\n  }\n}\n`\n\nconst Post = (props) => {\n\n    const [likePic, { loading, error, }] = useMutation(\n        LIKE_MUTATION,{\n            onCompleted: data=>{\n                alert(\"Image Liked\");\n                window.location.reload();\n            }\n        }\n    );\n\n    const likeImage = (imageId)=>{\n        const userId = parseInt(localStorage.getItem(\"userId\"))\n        likePic({\n            variables:{\n                image_id:parseInt(imageId),\n                user_id:userId,\n            }\n        })\n        if(error){\n            console.log(error)\n        }\n    }\n\n    const {likesLoading, likesError, data} = useQuery(\n        GET_IMAGE_LIKES,{\n            variables:{\n                image_id:parseInt(props.data.id)\n            }\n        }\n    );\n\n    return (\n        <div className=\"col\" id={props.data.id}>\n            <div className=\"card border-secondary bg-light mb-3\" style={{ width: \"20rem\", height: \"30rem\" }}>\n                <img className=\"card-img-top\" src={props.data.image_link} alt=\"Card image cap\" />\n                <div className=\"card-body\">\n                    <button className=\"btn btn-primary\" id={props.data.id} onClick={()=>likeImage(props.data.id)}>Like</button>\n                </div>\n                <div className='card-footer'>\n                Likes: {data ?data.ImageLikes.likes:<></>}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Post;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC;AAAA;AAE5D,MAAMC,aAAa,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,eAAe,GAAGJ,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,IAAI,GAAIC,KAAK,IAAK;EAAA;EAEpB,MAAM,CAACC,OAAO,EAAE;IAAEC,OAAO;IAAEC;EAAO,CAAC,CAAC,GAAGR,WAAW,CAC9CE,aAAa,EAAC;IACVO,WAAW,EAAEC,IAAI,IAAE;MACfC,KAAK,CAAC,aAAa,CAAC;MACpBC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC5B;EACJ,CAAC,CACJ;EAED,MAAMC,SAAS,GAAIC,OAAO,IAAG;IACzB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACvDd,OAAO,CAAC;MACJe,SAAS,EAAC;QACNC,QAAQ,EAACJ,QAAQ,CAACF,OAAO,CAAC;QAC1BO,OAAO,EAACN;MACZ;IACJ,CAAC,CAAC;IACF,IAAGT,KAAK,EAAC;MACLgB,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,MAAM;IAACkB,YAAY;IAAEC,UAAU;IAAEjB;EAAI,CAAC,GAAGT,QAAQ,CAC7CE,eAAe,EAAC;IACZkB,SAAS,EAAC;MACNC,QAAQ,EAACJ,QAAQ,CAACb,KAAK,CAACK,IAAI,CAACkB,EAAE;IACnC;EACJ,CAAC,CACJ;EAED,oBACI;IAAK,SAAS,EAAC,KAAK;IAAC,EAAE,EAAEvB,KAAK,CAACK,IAAI,CAACkB,EAAG;IAAA,uBACnC;MAAK,SAAS,EAAC,qCAAqC;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAA,wBAC5F;QAAK,SAAS,EAAC,cAAc;QAAC,GAAG,EAAEzB,KAAK,CAACK,IAAI,CAACqB,UAAW;QAAC,GAAG,EAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG,eACjF;QAAK,SAAS,EAAC,WAAW;QAAA,uBACtB;UAAQ,SAAS,EAAC,iBAAiB;UAAC,EAAE,EAAE1B,KAAK,CAACK,IAAI,CAACkB,EAAG;UAAC,OAAO,EAAE,MAAIb,SAAS,CAACV,KAAK,CAACK,IAAI,CAACkB,EAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAc;QAAA;QAAA;QAAA;MAAA,QACzG,eACN;QAAK,SAAS,EAAC,aAAa;QAAA,sBACpBlB,IAAI,GAAEA,IAAI,CAACsB,UAAU,CAACC,KAAK,gBAAC,qCAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACnC;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA7CK7B,IAAI;EAAA,QAEiCJ,WAAW,EAsBTC,QAAQ;AAAA;AAAA,KAxB/CG,IAAI;AA8CV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}